#pragma once
#include <string>
#include <vector>
using std::string;
class Vectores
{
private:
	int n;
public:
	
	Vectores(int _n);
	~Vectores(void);
	// Eduardo
	void LeerVec(string nombres[], int notas[]);
	void ImprimaNom(string nombres[]);
	//void ImprimaNotas(int notas[]);
	void BubleSort(string V[]);
	int MejorNota(int V[]);
	int Promedio(int V[]);

	// Mariam
	void BubleMejores3(int N[]);
	void ImprimaVec(int N[]);
	void LeerVecM(int N[]);

	// estrella
	void cargarVector(int vec[]);
	int contarPos(int vec[]);
	int contarNeg(int vec[]);
	int contarCer(int vec[]);
};


////////////////////////////////////Menu.cpp
#include "iostream"
#include "stdlib.h"
#include <string>
#include <vector>
#include "Vectores.h"
using namespace std;

Vectores::Vectores(int _n) {
	n = _n;
}

Vectores::~Vectores(void) {

}

// Eduardo
void Vectores::LeerVec(string nombres[], int notas[]) {
	for (int i = 0; i < n; i++) {
		cout << i + 1 << ") Ingrese un nombre: ";
		cin >> nombres[i];
		cout << "Ingrese la nota de "<<nombres[i]<<": ";
		cin >> notas[i];
	}
}
void Vectores::ImprimaNom(string nombres[]) {
	for (int i = 0; i < n; i++) {
		cout << nombres[i] << endl;
	}
}

void Vectores::BubleSort(string V[]) {
	string aux;
	for (int j = 0; j < n - 1; j++) {
		for (int i = 0; i < n - 1 - j; i++) {
			if (V[i] > V[i + 1]) {
				aux = V[i];
				V[i] = V[i + 1];
				V[i + 1] = aux;
			}
		}
	}
	Vectores::ImprimaNom(V);
}



int Vectores::MejorNota(int V[]) {
	int aux;
	for (int j = 0; j < n - 1; j++) {
		for (int i = 0; i < n - 1 - j; i++) {
			if (V[i] < V[i + 1]) {
				aux = V[i];
				V[i] = V[i + 1];
				V[i + 1] = aux;
			}
		}
	}
	return V[0];
}

int Vectores::Promedio(int V[]) {
	int aux=0, promedio;
	for (int i = 0; i < n; i++)
	{
		aux += V[i];
	}
	promedio = aux / n;
	return promedio;
}

// MARIAM

void Vectores::BubleMejores3(int N[])
{
	int i, j;

	int au;
	for (j = 0; j < n - 1; j++)
	{
		for (i = 0; i < n - 1 - j; i++)
		{
			if (N[i] < N[i + 1])
			{
				au = N[i];
				N[i] = N[i + 1];
				N[i + 1] = au;
			}
		}
	}
}

void Vectores::LeerVecM(int N[])
{
	int i;
	for (i = 0; i < n; i++)
	{
		cout << i + 1 << ") ";
		cout << "Ingrese la nota: ";
		cin >> N[i];

	}
}

void Vectores::ImprimaVec(int N[])
{
	int i;
	for (i = 0; i < n; i++)
	{
		cout << N[i] << endl;
	}
	cout << endl;
}

// ESTRELLA
void Vectores::cargarVector(int vec[])
{
	for (int i = 0; i < n; i++)
	{
		cout << "Ingrese v[" << i << "]= ";
		cin >> vec[i];
	}
}

int Vectores::contarPos(int vec[])
{
	int pos = 0;
	for (int i = 0; i < n; i++) {
		if (vec[i] > 0) {
			pos++;
		}
	}
	return pos;
}

int Vectores::contarNeg(int vec[])
{
	int neg = 0;
	for (int i = 0; i < n; i++) {
		if (vec[i] < 0) {
			neg++;
		}
	}
	return neg;
}
int Vectores::contarCer(int vec[])
{
	int cer = 0;
	for (int i = 0; i < n; i++) {
		if (vec[i] == 0) {
			cer++;
		}
	}
	return cer;

}

/////////////////////////////////////////MenuStr.h
#include "iostream"
#include "stdlib.h"
#include <string>
#include <vector>
#include "Vectores.h"
using namespace std;

// PROTOTIPOS DE FUNCION
void Estudiantes(); // Eduardo
int menuEstudiantil();
void Mariam();
void Estrella();

int main() {
	bool salir;
	int op;
	salir = true;
	while (salir)
	{
		cout << "\n\nMENU GENERAL DE EJERCICIOS" << endl;
		cout << "1. Eduardo Lizarazu" << endl;
		cout << "2. Mariam Atanacio" << endl;
		cout << "3. Estrella Rojas" << endl;
		cout << "4. Salir" << endl;
		cout << "Ingrese una de las opcines: ";
		cin >> op;
		switch (op)
		{
		case 1:
			Estudiantes(); // Eduardo
			break;
		case 2:
			Mariam();
			break;
		case 3:
			Estrella();
			break;
		case 4:
			salir = false;
			break;
		default:
			cout << "NO INGRESO UNA DE LAS OPCIONES!"<< endl;
		}
	}
	
	cout << "Finalizo el programa" << endl;
	system("pause");
	return 0;
}
// Funciones
void Estudiantes() {
	string nombre[100];
	int notas[100], n, escoger = 0;
	bool condicion;

	cout << "Ingrese el tamaÃ±o de su vector: ";
	cin >> n;
	Vectores objeto = Vectores(n);

	objeto.LeerVec(nombre, notas);

	condicion = true;
	while (condicion) {

		escoger = menuEstudiantil(); // Menu
		switch (escoger)
		{
		case 1:
			cout << endl;
			objeto.ImprimaNom(nombre);
			break;
		case 2:
			cout << endl;
			objeto.BubleSort(nombre);
			break;
		case 3:
			cout << "\nLa mejor nota es: " << objeto.MejorNota(notas) << endl;
			break;
		case 4:
			cout << "\nEl promedio (int) es: " << objeto.Promedio(notas) << endl;
			break;
		case 5:
			condicion = false;
			cout << "\nSaliendo del menu estuantil ..." << endl;
			break;
		default:
			cout << "\nNUMERO INVALIDO!" << endl;
		}
	}
}

int menuEstudiantil() {
	int escoger=0;
	cout << "\nMENU ESTUDIANTIL OPCIONES: " << endl;
	cout << "1. Listar alumnos " << endl;
	cout << "2. Ordenar alfabeticamente " << endl;
	cout << "3. Sacar la mejor nota " << endl;
	cout << "4. Sacar el promedio de todas la notas" << endl;
	cout << "5. Salir " << endl;
	cout << "Ingrese una opcion: ";
	cin >> escoger;
	return escoger;
}

// MARIAM 

void Mariam() {
	int n;
	int N[100];
	cout << "Cantidad de notas que deasea ingresar:"; cin >> n;
	cout << " Notas " << endl;
	cout << " -----" << endl;
	Vectores mejorcitos = Vectores(n);
	mejorcitos.LeerVecM(N);
	cout << "Las 3 mejores notas son: " << endl;
	mejorcitos.BubleMejores3(N);
	mejorcitos.ImprimaVec(N);
}

// ESTRELLA 

void Estrella() {
	int vec1[100], n;
	cout << "Ingrese el tamano del vector: "; cin >> n;
	Vectores vector1 = Vectores(n);
	vector1.cargarVector(vec1);
	cout << "La cantidad de numeros positivos: " << vector1.contarPos(vec1) << endl;
	cout << "La cantidad de numeros negativos: " << vector1.contarNeg(vec1) << endl;
	cout << "La cantidad de ceros: " << vector1.contarCer(vec1) << endl;
}
