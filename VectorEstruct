//-Vector.h- 
#pragma once
#define MAX 100 // Constante de compilador
class Vector
{
private: // Atributos
	int vec[MAX];
	int tam;
public:
	Vector(void);
	~Vector(void);
	void cargarVector(int vec[],int n);
	void mostrarVector(int vec[],int n);
	int sumarVector(int vec[],int n);
};



//Vector.cpp
#include "StdAfx.h"
#include "Vector.h"
#include <iostream>

using namespace std;

Vector::Vector(void)
{
}


Vector::~Vector(void)
{
}

void Vector::cargarVector(int vec[],int n)
{
	for (int i=0;i<n;i++)
	{
		cout <<"Ingrese v[";i;"]= ";
		cin>> vec[i];
	}
}

void Vector::mostrarVector(int vec[],int n)
{
	for (int i=0;i<n;i++)
	{
		cout <<"v[";i;"]= ";
		cout<<vec[i]<< endl;
	}
}

int Vector::sumarVector(int vec[],int n)
{
	int suma=0;
	for (int i=0;i<n;i++)
	{
		suma=suma + vec[i];
	}
	return suma;
}




//nombre delarchivo(vector).cpp
#include "stdafx.h"
#include "iostream"
#include "Vector.h"
#include "conio.h"
using namespace std;

int main()
{int t;
int v[MAX];
 int s=0;
 Vector vectorcito;
 cout<<"Ingrese tamaÃ±o: ";
 cin>>t;
 vectorcito.cargarVector(v,t);
 vectorcito.mostrarVector(v,t);
 s=vectorcito.sumarVector(v,t);
 cout<<"la suma total es: "<<s<<endl;
 getch();
	return 0;
}


